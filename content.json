{"posts":[{"title":"Hello World","text":"Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2023/05/25/hello-world/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2023/05/25/hello-world-1/"},{"title":"Ansible Install","text":"下载rpm安装文件 这里使用 yum 的方式仅下载安装包和依赖 在一台可以联网的相同系统的服务器上执行以下命令1yum install -y ansible --downloadonly --downloaddir=/opt/ansible-install 此命令将仅下载 ansible 安装包和依赖 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051================================================================================================================================================================== Package Architecture Version Repository Size==================================================================================================================================================================Installing: ansible noarch 2.8.8-1.p01.ky10 ks10-adv-updates 15 MInstalling dependencies: libsodium x86_64 1.0.16-7.ky10 ks10-adv-os 146 k python3-asn1crypto noarch 1.4.0-1.ky10 Base-OS 182 k python3-babel noarch 2.8.0-3.ky10 ks10-adv-updates 6.1 M python3-bcrypt x86_64 3.1.4-8.ky10 ks10-adv-os 39 k python3-cffi x86_64 1.14.1-1.ky10 Base-OS 237 k python3-cryptography x86_64 2.9.2-2.ky10 ks10-adv-updates 400 k python3-jinja2 noarch 2.11.2-2.p01.ky10 ks10-adv-updates 223 k python3-markupsafe x86_64 1.1.1-1.ky10 Base-OS 28 k python3-paramiko noarch 2.4.3-1.ky10.ky10 ks10-adv-os 281 k python3-ply noarch 3.11-1.ky10 Base-OS 88 k python3-pyasn1 noarch 0.3.7-8.ky10 ks10-adv-os 215 k python3-pycparser noarch 2.20-2.ky10 Base-OS 152 k python3-pynacl x86_64 1.2.1-5.ky10 ks10-adv-os 77 k python3-pyyaml x86_64 5.3.1-4.ky10 ks10-adv-updates 189 k sshpass x86_64 1.06-8.ky10 ks10-adv-os 24 kTransaction Summary==================================================================================================================================================================Install 16 PackagesTotal download size: 23 MInstalled size: 115 MYUM will only download packages for the transaction.Downloading Packages:(1/16): python3-markupsafe-1.1.1-1.ky10.x86_64.rpm 8.6 MB/s | 28 kB 00:00 (2/16): python3-asn1crypto-1.4.0-1.ky10.noarch.rpm 17 MB/s | 182 kB 00:00 (3/16): python3-ply-3.11-1.ky10.noarch.rpm 12 MB/s | 88 kB 00:00 (4/16): python3-cffi-1.14.1-1.ky10.x86_64.rpm 15 MB/s | 237 kB 00:00 (5/16): python3-pycparser-2.20-2.ky10.noarch.rpm 22 MB/s | 152 kB 00:00 (6/16): python3-bcrypt-3.1.4-8.ky10.x86_64.rpm 181 kB/s | 39 kB 00:00 (7/16): libsodium-1.0.16-7.ky10.x86_64.rpm 500 kB/s | 146 kB 00:00 (8/16): python3-pyasn1-0.3.7-8.ky10.noarch.rpm 1.8 MB/s | 215 kB 00:00 (9/16): python3-paramiko-2.4.3-1.ky10.ky10.noarch.rpm 815 kB/s | 281 kB 00:00 (10/16): python3-pynacl-1.2.1-5.ky10.x86_64.rpm 1.1 MB/s | 77 kB 00:00 (11/16): sshpass-1.06-8.ky10.x86_64.rpm 377 kB/s | 24 kB 00:00 (12/16): python3-cryptography-2.9.2-2.ky10.x86_64.rpm 1.8 MB/s | 400 kB 00:00 (13/16): python3-jinja2-2.11.2-2.p01.ky10.noarch.rpm 1.8 MB/s | 223 kB 00:00 (14/16): python3-pyyaml-5.3.1-4.ky10.x86_64.rpm 1.7 MB/s | 189 kB 00:00 (15/16): python3-babel-2.8.0-3.ky10.noarch.rpm 3.4 MB/s | 6.1 MB 00:01 (16/16): ansible-2.8.8-1.p01.ky10.noarch.rpm 3.2 MB/s | 15 MB 00:04 ------------------------------------------------------------------------------------------------------------------------------------------------------------------Total 4.7 MB/s | 23 MB 00:04 Complete!The downloaded packages were saved in cache until the next successful transaction.You can remove cached packages by executing 'yum clean packages'. 复制下载的安装包和依赖至需要的服务器上执行安装1yum localinstall {packages_path}/*.rpm 检查1ansible --version","link":"/2023/05/29/ansible/1-ansible-install/"},{"title":"Docker Install","text":"CentOS 在线安装删除旧的文件和依赖12345678yum remove docker \\ docker-client \\ docker-client-latest \\ docker-common \\ docker-latest \\ docker-latest-logrotate \\ docker-logrotate \\ docker-engine 安装工具依赖123yum install -y yum-utils \\ device-mapper-persistent-data \\ lvm2 安装 Docker1yum install docker-ce docker-ce-cli containerd.io 安装指定版本查询版本列表1yum list docker-ce --showduplicates | sort -r 安装1yum install docker-ce-&lt;VERSION_STRING&gt; docker-ce-cli-&lt;VERSION_STRING&gt; containerd.io 起停 Docker123systemctl start dockersystemctl stop dockersystemctl restart docker 卸载 docker删除安装包：1yum remove docker-ce 删除镜像、容器、配置文件等内容：1rm -rf /var/lib/docker","link":"/2023/05/25/docker/1-install/"},{"title":"创建 Vue3 Electron Vite ElectronBuilder 客户端项目","text":"创建 vue vite 项目1234# 初始化项目npm init vue@latestcd {preject_name}yarn install 1234# 添加 electron 依赖yarn add electron --dev# 添加 vite electron 插件依赖yarn add vite-plugin-electron --dev 在项目中创建 electron 文件夹1mkdir electron 进入 electron 文件夹，创建 main.js 和 preload.js123456789101112131415161718192021222324252627282930313233343536373839cd electronvi main.jsconst { app, BrowserWindow } = require('electron');const path = require('path')const createWindow = () =&gt; { const win = new BrowserWindow({ width: 800, height: 600, webPreferences: { preload: path.join(__dirname, 'preload.js'), }, }); win.maximize(); // You can use `process.env.VITE_DEV_SERVER_URL` when the vite command is called `serve` if (process.env.VITE_DEV_SERVER_URL) { win.loadURL(process.env.VITE_DEV_SERVER_URL) } else { // Load your file win.loadFile('dist/index.html'); }};app.whenReady().then(() =&gt; { createWindow(); app.on('activate', () =&gt; { if (BrowserWindow.getAllWindows().length === 0) { createWindow(); } });});app.on('window-all-closed', () =&gt; { if (process.platform !== 'darwin') { app.quit(); }}); 1234567891011vi preload.jsconst { contextBridge } = require('electron')contextBridge.exposeInMainWorld('versions', { node: () =&gt; process.versions.node, chrome: () =&gt; process.versions.chrome, electron: () =&gt; process.versions.electron, // 能暴露的不仅仅是函数，我们还可以暴露变量}) 返回项目根目录，修改 vite.config.js123456789101112131415161718192021222324252627282930313233cd ..vi vite.config.jsimport {fileURLToPath, URL} from 'node:url'import {defineConfig} from 'vite'import vue from '@vitejs/plugin-vue'import electron from 'vite-plugin-electron'// https://vitejs.dev/config/export default defineConfig({ plugins: [ electron([ { entry: 'electron/main.js', }, { entry: 'electron/preload.js', onstart(options) { //当预加载脚本构建完成时 通知渲染器进程重新加载页面 //而不是重新启动整个Electron App options.reload() }, } ]), vue() ], resolve: { alias: { '@': fileURLToPath(new URL('./src', import.meta.url)) } }}) 修改 package.json 修改 main 属性为 dist-electron/main.js ```shell 添加 electron-builder1yarn add electron-builder --dev 创建 electron-builder.json5 文件12345678910111213141516171819202122232425262728293031323334353637vi electron-builder.json5{ &quot;appId&quot;: &quot;YourAppID&quot;, &quot;asar&quot;: false, &quot;directories&quot;: { &quot;output&quot;: &quot;release/${version}&quot; }, &quot;files&quot;: [ &quot;dist&quot;, &quot;dist-electron&quot; ], &quot;mac&quot;: { &quot;artifactName&quot;: &quot;${productName}_${version}.${ext}&quot;, &quot;target&quot;: [ &quot;dmg&quot; ] }, &quot;win&quot;: { &quot;target&quot;: [ { &quot;target&quot;: &quot;nsis&quot;, &quot;arch&quot;: [ &quot;x64&quot; ] } ], &quot;artifactName&quot;: &quot;${productName}_${version}.${ext}&quot; }, &quot;nsis&quot;: { &quot;oneClick&quot;: false, &quot;perMachine&quot;: false, &quot;allowToChangeInstallationDirectory&quot;: true, &quot;deleteAppDataOnUninstall&quot;: false }} 修改路由模式1234vi src/router/router.js// history: createWebHistory(import.meta.env.BASE_URL),history: createWebHashHistory(import.meta.env.BASE_URL),","link":"/2023/05/29/electron/Vue3-Electron-Vite-ElectronBuilder/"},{"title":"Elasticsearch 配置文件说明","text":"属性配置文件 {elasticsearch_home}/config/elasticsearch.yml 1234567891011121314151617181920212223242526# 集群名称cluster.name: test-cluster# 节点名称node.name: node-1# 数据目录path.data: /data/elastic/es-data# 日志目录path.logs: /data/elastic/es-logs# 绑定 IPnetwork.host: 192.168.0.1# 是否开启认证xpack.security.enabled: truexpack.security.enrollment.enabled: true# 是否开启 httpsxpack.security.http.ssl: enabled: true keystore.path: certs/http.p12xpack.security.transport.ssl: enabled: true verification_mode: certificate keystore.path: certs/transport.p12 truststore.path: certs/transport.p12# 初始化时的主节点设置cluster.initial_master_nodes: [&quot;node-1&quot;]# 访问 IP 限制 0.0.0.0 表示允许任意 IP 访问http.host: 0.0.0.0 jvm配置文件 {elasticsearch_home}/config/jvm.options 设置运行内存12-Xms4g-Xmx4g","link":"/2023/05/29/elasticsearch/3-config/"},{"title":"Elasticsearch 节点角色","text":"打开配置文件 {elasticsearch_home}/config/elasticsearch.yml 1node.roles: [master, data] master 主节点 高可用性（HA）集群至少需要三个符合主条件的节点，其中至少两个不是仅投票的节点。 data 数据节点 data_content 内容数据节点 内容数据通常具有较长的数据保留要求 内容的价值随着时间的推移保持相对恒定 data_hot 热数据节点 保存您最近搜索最频繁的时间序列数据。 data_warm 温暖的数据节点 查询频率低于热层中最近索引的数据，时间序列数据可以移动到温暖层。温暖层通常包含最近几周的数据。仍然允许更新，但可能并不常见。当您不再需要定期搜索时间序列数据时，它可以从温暖层移动到冷层。 data_cold 冷数据节点 当您不再需要定期搜索时间序列数据时，它可以从温暖层移动到冷层。 data_frozen冻结数据节点 一旦数据不再被查询，或很少被查询，它可能会从寒冷的层移动到冻结层 ingest 摄取节点 ml 机器学习节点 remote_cluster_client 远程客户端 transform 变换节点 特殊配置投票节点 参与主节点选举但本身不会成为主节点voting_only 1node.roles: [master, voting_only]","link":"/2023/05/29/elasticsearch/4-node-role/"},{"title":"离线部署 Kibana","text":"创建运行用户12345678# 创建用户组groupadd kibana# 创建用户并指定组useradd -g kibana kibana# 创建用户并指定组和用户目录useradd -d /data/kibana -m -g kibana kibana 切换用户1su - kibana 下载 Kibana https://www.elastic.co/cn/downloads/past-releases/kibana-8-7-1下载相应的系统安装文件这里以 LINUX X86_64 为例https://artifacts.elastic.co/downloads/kibana/kibana-8.7.1-linux-x86_64.tar.gz 解压1kibana-8.7.1-linux-x86_64.tar.gz 启动 kibana1{kibana_home}/bin/kibana 后台启动 kibana1nohup {kibana_home}/bin/kibana &gt; kibana.log 2&gt;&amp;1 &amp; 生成 kibana 注册令牌1{elasticsearch_home}/bin/elasticsearch-create-enrollment-token -s kibana 访问 https://{localhost}:5601 输入 kibana 注册令牌 配置12345678910111213{kibana_home}/config/kibana.yml# 添加server.host: 192.168.0.1server.port: 5601server.publicBaseUrl: &quot;kibana&quot; # http://192.168.0.1:5601/kibana# 使用 token 注册方式 则无需配置#elasticsearch.username: &quot;kibana_system&quot;#elasticsearch.password: &quot;pass&quot;# 语言配置i18n.locale: zh-CN","link":"/2023/05/29/elasticsearch/2-kibana-install/"},{"title":"离线部署 Elasticsearch","text":"创建运行用户12345678# 创建用户组groupadd elasticsearch# 创建用户并指定组useradd -g elasticsearch elasticsearch# 创建用户并指定组和用户目录useradd -d /data/elasticsearch -m -g elasticsearch elasticsearch 切换用户1su - elasticsearch 系统参数设置12345vi /etc/security/limits.conf# 添加elasticsearch - nofile 65535elasticsearch - nproc 4096 12345678910vi /etc/sysctl.conf# 添加vm.max_map_count = 262144# 使设置生效sysctl -p# 验证sysctl vm.max_map_count 下载 Elasticsearch https://www.elastic.co/cn/downloads/past-releases/elasticsearch-8-7-1下载相应的系统安装文件这里以 LINUX X86_64 为例https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-8.7.1-linux-x86_64.tar.gz 注意 elasticsearch 7 版本以上自带 JDK 解压1tar -zxvf elasticsearch-8.7.1-linux-x86_64.tar.gz 启动 elasticsearch1{elasticsearch_home}/bin/elasticsearch 后台启动 elasticsearch1{elasticsearch_home}/bin/elasticsearch -d 启动后会自动生成 elastic 账户和随机密码， kibana 注册令牌，https 证书 访问 https://{localhost}:9200 输入 elastic 和 上面生成的随机密码登陆，返回节点信息。 重制 elastic 密码1{elasticsearch_home}/bin/elasticsearch-reset-password -u elastic 生成 kibana 注册令牌1{elasticsearch_home}/bin/elasticsearch-create-enrollment-token -s kibana 生成节点注册令牌1{elasticsearch_home}/bin/elasticsearch-create-enrollment-token -s node 集群组建生成节点注册令牌1{elasticsearch_home}/bin/elasticsearch-create-enrollment-token -s node 在新节点启动时1{elasticsearch_home}/bin/elasticsearch -d --enrollment-token {token}","link":"/2023/05/29/elasticsearch/1-tar-install/"},{"title":"Elasticsearch Docker 部署","text":"下载镜像1docker pull elasticsearch:8.7.1 创建独立网络1docker network create elastic 创建数据盘1docker volume create elasticsearch-data 单节点启动1docker run -d --name elasticsearch --net elastic -p 9200:9200 -p 9300:9300 -e &quot;discovery.type=single-node&quot; -v elasticsearch-data:/usr/share/elasticsearch/data elasticsearch:8.7.1 集群组建创建数据盘123docker volume create elasticsearch-data-1docker volume create elasticsearch-data-2docker volume create elasticsearch-data-3 依次启动节点1docker run -d --name elasticsearch --net elastic -p 9200:9200 -p 9300:9300 -e &quot;node.name=es01&quot; -v elasticsearch-data:/usr/share/elasticsearch/data elasticsearch:8.7.1","link":"/2023/05/29/elasticsearch/5-docker-install/"},{"title":"RabbitMQ 配置文件解析优化","text":"配置文件位置(没有则创建一个) {rabbitmq_home}/etc/rabbitmq/rabbitmq.conf 连接配置1234567891011121314# 监听端口listeners.tcp.default = 5672# 接受TCP侦听器连接的Erlang进程数。num_acceptors.tcp = 20# 心跳间隔 不低于6秒heartbeat = 60# 最大允许的字节数 128k 保持在128k-1m之间frame_max = 131072# 客户端允许连接创建的 channel 大小 并发超了的时候会出现 削峰现象channel_max = 2046 内存磁盘12345678910# 绝对限制 内存使用限制 2GB 超过后 阻塞所有的请求# vm_memory_high_watermark.absolute = 256MB# 相对限制 内存使用限制 40% 超过指定比例后 阻塞所有的请求vm_memory_high_watermark.relative = 0.4# 内存使用限制 50% 超过指定比例后 将数据写入磁盘 以释放内存 0.4 * 0.5 = 0.2 相当于 总内存的 20%vm_memory_high_watermark_paging_ratio = 0.5 # 磁盘使用限制 50MBdisk_free_limit.absolute = 1000000000 # 1GB# 手动设置服务器可用的内存大小 默认不设置 由RabbitMQ自行推断# total_memory_available_override_value = 2GB 集群123456789101112# 集群名称cluster_name = my-cluster# 网络分裂/分区 处理方式# ignore 不处理# pause_minority 节点较多的一方继续运行 较少的暂停 网络恢复后启动# pause_if_all_down 由管理员指定的节点运行 # autoheal 分裂结束时生效，而不是在启动时生效。在网络恢复时 将自动决定获胜分裂，并且将重新启动不在获胜分裂中的所有节点。 cluster_partition_handling = ignore# 用于集群内通信的委托进程数量 cpu 内核 * 2 - 1delegate_count = 16 插件123# 管理插件 端口和IPmanagement.tcp.port = 15672management.tcp.ip = 0.0.0.0","link":"/2023/05/29/rabbitmq/3-config/"},{"title":"Docker 部署 RabbitMQ","text":"下载镜像1docker pull rabbitmq:3.9.26-management-alpine 创建独立网络（可选，如果不创建则需要在创建集群时添加 –link 参数）1docker network create rabbitmq 启动单节点1docker run -d --name rabbitmq -p 5672:5672 -p 15672:15672 -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=123456 rabbitmq:3.9.26-management-alpine –name: 自定义容器名称 -p: 端口号映射 -e RABBITMQ_DEFAULT_USER: 账户名 -e RABBITMQ_DEFAULT_PASS: 密码 打开 http://localhost:15672 输入默认的账户密码登录 出现 RabbitMQ 管理页面表示启动成功 启动集群节点（3 节点）使用独立网络1docker run -d --hostname rabbitmq1 --name rabbitmq1 --network rabbitmq -p 5671:5672 -p 15671:15672 -e RABBITMQ_ERLANG_COOKIE=&quot;cluster_rabbitmq_cookie&quot; -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=123456 rabbitmq:3.9.26-management-alpine 1docker run -d --hostname rabbitmq2 --name rabbitmq2 --network rabbitmq -p 5672:5672 -p 15672:15672 -e RABBITMQ_ERLANG_COOKIE=&quot;cluster_rabbitmq_cookie&quot; -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=123456 rabbitmq:3.9.26-management-alpine 1docker run -d --hostname rabbitmq3 --name rabbitmq3 --network rabbitmq -p 5673:5672 -p 15673:15672 -e RABBITMQ_ERLANG_COOKIE=&quot;cluster_rabbitmq_cookie&quot; -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=123456 rabbitmq:3.9.26-management-alpine –network: 指定网络 不使用独立网络1docker run -d --hostname rabbitmq1 --name rabbitmq1 -p 5671:5672 -p 15671:15672 -e RABBITMQ_ERLANG_COOKIE=&quot;cluster_rabbitmq_cookie&quot; -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=123456 rabbitmq:3.9.26-management-alpine 1docker run -d --hostname rabbitmq2 --name rabbitmq2 --link rabbitmq1:rabbitmq1 -p 5672:5672 -p 15672:15672 -e RABBITMQ_ERLANG_COOKIE=&quot;cluster_rabbitmq_cookie&quot; -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=123456 rabbitmq:3.9.26-management-alpine 1docker run -d --hostname rabbitmq3 --name rabbitmq3 --link rabbitmq1:rabbitmq1 --link rabbitmq2:rabbitmq2 -p 5673:5672 -p 15673:15672 -e RABBITMQ_ERLANG_COOKIE=&quot;cluster_rabbitmq_cookie&quot; -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=123456 rabbitmq:3.9.26-management-alpine –link: 映射链接指定容器 组建集群登录 rabbitmq2 节点123456# 停止rabbitmqctl stop_app# 加入rabbitmqctl join_cluster rabbit@rabbitmq1# 启动rabbitmqctl start_app 登录 rabbitmq3 节点123456# 停止rabbitmqctl stop_app# 加入rabbitmqctl join_cluster rabbit@rabbitmq1# 启动rabbitmqctl start_app","link":"/2023/05/25/rabbitmq/1-docker-install/"},{"title":"RabbitMQ 常用命令解析","text":"集群集群状态1{rabbitmq_home}/sbin/rabbitmqctl cluster_status 设置集群名称1{rabbitmq_home}/sbin/rabbitmqctl set_cluster_name {cluster_name} 节点启动节点1{rabbitmq_home}/sbin/rabbitmq-server -detached 停止节点1{rabbitmq_home}/sbin/rabbitmqctl stop 节点状态1{rabbitmq_home}/sbin/rabbitmqctl status 停止集群中的指定节点1{rabbitmq_home}/sbin/rabbitmqctl -n {node name} stop 启动应用服务1{rabbitmq_home}/sbin/rabbitmqctl start_app 停止应用服务1{rabbitmq_home}/sbin/rabbitmqctl stop_app 加入集群1{rabbitmq_home}/sbin/rabbitmqctl join_cluster {cluster a node name} 用户创建用户1{rabbitmq-home}/sbin/rabbitmqctl add_user {username} {password} 删除用户1{rabbitmq-home}/sbin/rabbitmqctl delete_user {username} 用户列表1{rabbitmq-home}/sbin/rabbitmqctl list_user 修改密码1{rabbitmq-home}/sbin/rabbitmqctl change_password {username} {password} 清除密码1{rabbitmq-home}/sbin/rabbitmqctl clear_password {username} 设置用户角色1{rabbitmq-home}/sbin/rabbitmqctl set_user_tags {username} {tag} tag management policymaker monitoring administrator 设置用户 vhost 权限1{rabbitmq-home}/sbin/rabbitmqctl set_permissions -p {vhost} {username} {conf} {write} {read} {rabbitmq-home}/sbin/rabbitmqctl set_permissions -p “/“ admin “.“ “.“ “.*” vhost创建 vhost1{rabbitmq-home}/sbin/rabbitmqctl add_vhost {vhost_name} 删除 vhost1{rabbitmq-home}/sbin/rabbitmqctl delete_vhost {vhost_name} 队列队列列表1{rabbitmq-home}/sbin/rabbitmqctl list_queues [-p {vhost_name}] 删除队列1{rabbitmq-home}/sbin/rabbitmqctl delete_queue {queue_name} 交换机交换机列表1{rabbitmq-home}/sbin/rabbitmqctl list_exchanges [-p {vhost_name}] 交换机和队列绑定关系列表1{rabbitmq-home}/sbin/rabbitmqctl list_bindings [-p {vhost_name}] 连接连接列表1{rabbitmq-home}/sbin/rabbitmqctl list_connections 关闭连接1{rabbitmq-home}/sbin/rabbitmqctl close_connection {connection_pid} 关闭全部连接1{rabbitmq-home}/sbin/rabbitmqctl close_all_connections channel 通道channel 列表1{rabbitmq-home}/sbin/rabbitmqctl list_channels consumer 消费端consumer 列表1{rabbitmq-home}/sbin/rabbitmqctl list_consumers [-p {vhost_name}]","link":"/2023/05/29/rabbitmq/4-command/"},{"title":"RabbitMQ 交换机","text":"交换机类型direct 直接交换机fanout 扇出交换机topic 主题交换机交换机属性 Virtual host: Name: Type: Durability: Auto delete: Internal: Arguments: 交换机参数备用交换机 alternate-exchange","link":"/2023/05/29/rabbitmq/5-exchange/"},{"title":"离线部署 RabbitMQ","text":"安装 erlang 运行环境下载安装文件1https://github.com/rabbitmq/rabbitmq-server/releases/download/v3.9.26/rabbitmq-server-3.9.26-1.el8.noarch.rpm 安装 erlang1rpm -Uvh rabbitmq-server-3.9.26-1.el8.noarch.rpm 安装 RabbitMQ下载 RabbitMQ1https://github.com/rabbitmq/rabbitmq-server/releases/download/v3.9.26/rabbitmq-server-generic-unix-3.9.26.tar.xz 解压1tar -xvf rabbitmq-server-generic-unix-3.9.26.tar.xz 单节点启动1{rabbitmq_home}/sbin/./rabbitmq-server 后台启动1{rabbitmq_home}/sbin/./rabbitmq-server -detached 单机器多实例集群（3 节点）创建多个配置文件1234567891011121314vi {rabbitmq_home}/etc/rabbitmq/rabbitmq-1.conf# 设置管理服务端口号management.tcp.port = 15671vi {rabbitmq_home}/etc/rabbitmq/rabbitmq-2.conf# 设置管理服务端口号management.tcp.port = 15672vi {rabbitmq_home}/etc/rabbitmq/rabbitmq-3.conf# 设置管理服务端口号management.tcp.port = 15673 RabbitMQ 配置文件示例 rabbitmq.confhis example configuration file demonstrates various settings## available via rabbitmq.conf. It primarily focuses core broker settings## but some tier 1 plugin settings are also covered.#### This file is AN EXAMPLE. It is NOT MEANT TO BE USED IN PRODUCTION. Instead of## copying the entire (large!) file, create or generate a new rabbitmq.conf for the target system## and populate it with the necessary settings.#### See https://rabbitmq.com/configure.html to learn about how to configure RabbitMQ,## the ini-style format used by rabbitmq.conf, how it is different from `advanced.config`,## how to verify effective configuration, and so on.#### See https://rabbitmq.com/documentation.html for the rest of RabbitMQ documentation.#### In case you have questions, please use RabbitMQ community Slack and the rabbitmq-users Google group## instead of GitHub issues.# ======================================# Core broker section# ======================================## Networking## ====================#### Related doc guide: https://rabbitmq.com/networking.html.#### By default, RabbitMQ will listen on all interfaces, using## the standard (reserved) AMQP 0-9-1 and 1.0 port.### listeners.tcp.default = 5672## To listen on a specific interface, provide an IP address with port.## For example, to listen only on localhost for both IPv4 and IPv6:### IPv4# listeners.tcp.local = 127.0.0.1:5672# IPv6# listeners.tcp.local_v6 = ::1:5672## You can define multiple listeners using listener names# listeners.tcp.other_port = 5673# listeners.tcp.other_ip = 10.10.10.10:5672## TLS listeners are configured in the same fashion as TCP listeners,## including the option to control the choice of interface.### listeners.ssl.default = 5671## It is possible to disable regular TCP (non-TLS) listeners. Clients## not configured to use TLS and the correct TLS-enabled port won't be able## to connect to this node.# listeners.tcp = none## Number of Erlang processes that will accept connections for the TCP## and TLS listeners.### num_acceptors.tcp = 10# num_acceptors.ssl = 10## Socket writer will force GC every so many bytes transferred.## Default is 1 GiB (`1000000000`). Set to 'off' to disable.### socket_writer.gc_threshold = 1000000000### To disable:# socket_writer.gc_threshold = off## Maximum amount of time allowed for the AMQP 0-9-1 and AMQP 1.0 handshake## (performed after socket connection and TLS handshake) to complete, in milliseconds.### handshake_timeout = 10000## Set to 'true' to perform reverse DNS lookups when accepting a## connection. rabbitmqctl and management UI will then display hostnames## instead of IP addresses. Default value is `false`.### reverse_dns_lookups = false#### Security, Access Control## ==============#### Related doc guide: https://rabbitmq.com/access-control.html.## The default &quot;guest&quot; user is only permitted to access the server## via a loopback interface (e.g. localhost).## {loopback_users, [&lt;&lt;&quot;guest&quot;&gt;&gt;]},### loopback_users.guest = true## Uncomment the following line if you want to allow access to the## guest user from anywhere on the network.# loopback_users.guest = false## TLS configuration.#### Related doc guide: https://rabbitmq.com/ssl.html.### listeners.ssl.1 = 5671# # ssl_options.verify = verify_peer# ssl_options.fail_if_no_peer_cert = false# ssl_options.cacertfile = /path/to/cacert.pem# ssl_options.certfile = /path/to/cert.pem# ssl_options.keyfile = /path/to/key.pem## ssl_options.honor_cipher_order = true# ssl_options.honor_ecc_order = true### These are highly recommended for TLSv1.2 but cannot be used## with TLSv1.3. If TLSv1.3 is enabled, these lines MUST be removed.# ssl_options.client_renegotiation = false# ssl_options.secure_renegotiate = true### Limits what TLS versions the server enables for client TLS## connections. See https://www.rabbitmq.com/ssl.html#tls-versions for details.#### Cutting edge TLS version which requires recent client runtime## versions and has no cipher suite in common with earlier TLS versions.# ssl_options.versions.1 = tlsv1.3## Enables TLSv1.2 for best compatibility# ssl_options.versions.2 = tlsv1.2## Older TLS versions have known vulnerabilities and are being phased out## from wide use.## Limits what cipher suites the server will use for client TLS## connections. Narrowing this down can prevent some clients## from connecting.## If TLSv1.3 is enabled and cipher suites are overridden, TLSv1.3-specific## cipher suites must also be explicitly enabled.## See https://www.rabbitmq.com/ssl.html#cipher-suites and https://wiki.openssl.org/index.php/TLS1.3#Ciphersuites## for details.### The example below uses TLSv1.3 cipher suites only## ssl_options.ciphers.1 = TLS_AES_256_GCM_SHA384# ssl_options.ciphers.2 = TLS_AES_128_GCM_SHA256# ssl_options.ciphers.3 = TLS_CHACHA20_POLY1305_SHA256# ssl_options.ciphers.4 = TLS_AES_128_CCM_SHA256# ssl_options.ciphers.5 = TLS_AES_128_CCM_8_SHA256### The example below uses TLSv1.2 cipher suites only## ssl_options.ciphers.1 = ECDHE-ECDSA-AES256-GCM-SHA384# ssl_options.ciphers.2 = ECDHE-RSA-AES256-GCM-SHA384# ssl_options.ciphers.3 = ECDHE-ECDSA-AES256-SHA384# ssl_options.ciphers.4 = ECDHE-RSA-AES256-SHA384# ssl_options.ciphers.5 = ECDH-ECDSA-AES256-GCM-SHA384# ssl_options.ciphers.6 = ECDH-RSA-AES256-GCM-SHA384# ssl_options.ciphers.7 = ECDH-ECDSA-AES256-SHA384# ssl_options.ciphers.8 = ECDH-RSA-AES256-SHA384# ssl_options.ciphers.9 = DHE-RSA-AES256-GCM-SHA384# ssl_options.ciphers.10 = DHE-DSS-AES256-GCM-SHA384# ssl_options.ciphers.11 = DHE-RSA-AES256-SHA256# ssl_options.ciphers.12 = DHE-DSS-AES256-SHA256# ssl_options.ciphers.13 = ECDHE-ECDSA-AES128-GCM-SHA256# ssl_options.ciphers.14 = ECDHE-RSA-AES128-GCM-SHA256# ssl_options.ciphers.15 = ECDHE-ECDSA-AES128-SHA256# ssl_options.ciphers.16 = ECDHE-RSA-AES128-SHA256# ssl_options.ciphers.17 = ECDH-ECDSA-AES128-GCM-SHA256# ssl_options.ciphers.18 = ECDH-RSA-AES128-GCM-SHA256# ssl_options.ciphers.19 = ECDH-ECDSA-AES128-SHA256# ssl_options.ciphers.20 = ECDH-RSA-AES128-SHA256# ssl_options.ciphers.21 = DHE-RSA-AES128-GCM-SHA256# ssl_options.ciphers.22 = DHE-DSS-AES128-GCM-SHA256# ssl_options.ciphers.23 = DHE-RSA-AES128-SHA256# ssl_options.ciphers.24 = DHE-DSS-AES128-SHA256# ssl_options.ciphers.25 = ECDHE-ECDSA-AES256-SHA# ssl_options.ciphers.26 = ECDHE-RSA-AES256-SHA# ssl_options.ciphers.27 = DHE-RSA-AES256-SHA# ssl_options.ciphers.28 = DHE-DSS-AES256-SHA# ssl_options.ciphers.29 = ECDH-ECDSA-AES256-SHA# ssl_options.ciphers.30 = ECDH-RSA-AES256-SHA# ssl_options.ciphers.31 = ECDHE-ECDSA-AES128-SHA# ssl_options.ciphers.32 = ECDHE-RSA-AES128-SHA# ssl_options.ciphers.33 = DHE-RSA-AES128-SHA# ssl_options.ciphers.34 = DHE-DSS-AES128-SHA# ssl_options.ciphers.35 = ECDH-ECDSA-AES128-SHA# ssl_options.ciphers.36 = ECDH-RSA-AES128-SHA# ssl_options.bypass_pem_cache = true## Select an authentication/authorisation backend to use.#### Alternative backends are provided by plugins, such as rabbitmq-auth-backend-ldap.#### NB: These settings require certain plugins to be enabled.#### Related doc guides:#### * https://rabbitmq.com/plugins.html## * https://rabbitmq.com/access-control.html### auth_backends.1 = rabbit_auth_backend_internal## uses separate backends for authentication and authorisation,## see below.# auth_backends.1.authn = rabbit_auth_backend_ldap# auth_backends.1.authz = rabbit_auth_backend_internal## The rabbitmq_auth_backend_ldap plugin allows the broker to## perform authentication and authorisation by deferring to an## external LDAP server.#### Relevant doc guides:#### * https://rabbitmq.com/ldap.html## * https://rabbitmq.com/access-control.html#### uses LDAP for both authentication and authorisation# auth_backends.1 = rabbit_auth_backend_ldap## uses HTTP service for both authentication and## authorisation# auth_backends.1 = rabbit_auth_backend_http## uses two backends in a chain: HTTP first, then internal# auth_backends.1 = rabbit_auth_backend_http# auth_backends.2 = rabbit_auth_backend_internal## Authentication## The built-in mechanisms are 'PLAIN',## 'AMQPLAIN', and 'EXTERNAL' Additional mechanisms can be added via## plugins.#### Related doc guide: https://rabbitmq.com/authentication.html.### auth_mechanisms.1 = PLAIN# auth_mechanisms.2 = AMQPLAIN## The rabbitmq-auth-mechanism-ssl plugin makes it possible to## authenticate a user based on the client's x509 (TLS) certificate.## Related doc guide: https://rabbitmq.com/authentication.html.#### To use auth-mechanism-ssl, the EXTERNAL mechanism should## be enabled:### auth_mechanisms.1 = PLAIN# auth_mechanisms.2 = AMQPLAIN# auth_mechanisms.3 = EXTERNAL## To force x509 certificate-based authentication on all clients,## exclude all other mechanisms (note: this will disable password-based## authentication even for the management UI!):### auth_mechanisms.1 = EXTERNAL## This pertains to both the rabbitmq-auth-mechanism-ssl plugin and## STOMP ssl_cert_login configurations. See the RabbitMQ STOMP plugin## configuration section later in this file and the README in## https://github.com/rabbitmq/rabbitmq-auth-mechanism-ssl for further## details.#### To use the TLS cert's CN instead of its DN as the username### ssl_cert_login_from = common_name## TLS handshake timeout, in milliseconds.### ssl_handshake_timeout = 5000## Cluster name### cluster_name = dev3.eng.megacorp.local## Password hashing implementation. Will only affect newly## created users. To recalculate hash for an existing user## it's necessary to update her password.#### To use SHA-512, set to rabbit_password_hashing_sha512.### password_hashing_module = rabbit_password_hashing_sha256## When importing definitions exported from versions earlier## than 3.6.0, it is possible to go back to MD5 (only do this## as a temporary measure!) by setting this to rabbit_password_hashing_md5.### password_hashing_module = rabbit_password_hashing_md5#### Default User / VHost## ====================#### On first start RabbitMQ will create a vhost and a user. These## config items control what gets created.## Relevant doc guide: https://rabbitmq.com/access-control.html### default_vhost = /# default_user = guest# default_pass = guest# default_permissions.configure = .*# default_permissions.read = .*# default_permissions.write = .*## Tags for default user#### For more details about tags, see the documentation for the## Management Plugin at https://rabbitmq.com/management.html.### default_user_tags.administrator = true## Define other tags like this:# default_user_tags.management = true# default_user_tags.custom_tag = true#### Additional network and protocol related configuration## =====================================================#### Set the server AMQP 0-9-1 heartbeat timeout in seconds.## RabbitMQ nodes will send heartbeat frames at roughly## the (timeout / 2) interval. Two missed heartbeats from## a client will close its connection.#### Values lower than 6 seconds are very likely to produce## false positives and are not recommended.#### Related doc guides:#### * https://rabbitmq.com/heartbeats.html## * https://rabbitmq.com/networking.html### heartbeat = 60## Set the max permissible size of an AMQP frame (in bytes).### frame_max = 131072## Set the max frame size the server will accept before connection## tuning occurs### initial_frame_max = 4096## Set the max permissible number of channels per connection.## 0 means &quot;no limit&quot;.### channel_max = 128## Customising TCP Listener (Socket) Configuration.#### Related doc guides:#### * https://rabbitmq.com/networking.html## * https://www.erlang.org/doc/man/inet.html#setopts-2### tcp_listen_options.backlog = 128# tcp_listen_options.nodelay = true# tcp_listen_options.exit_on_close = false## tcp_listen_options.keepalive = true# tcp_listen_options.send_timeout = 15000## tcp_listen_options.buffer = 196608# tcp_listen_options.sndbuf = 196608# tcp_listen_options.recbuf = 196608#### Resource Limits &amp; Flow Control## ==============================#### Related doc guide: https://rabbitmq.com/memory.html.## Memory-based Flow Control threshold.### vm_memory_high_watermark.relative = 0.4## Alternatively, we can set a limit (in bytes) of RAM used by the node.### vm_memory_high_watermark.absolute = 1073741824## Or you can set absolute value using memory units (with RabbitMQ 3.6.0+).## Absolute watermark will be ignored if relative is defined!### vm_memory_high_watermark.absolute = 2GB#### Supported unit symbols:#### k, kiB: kibibytes (2^10 - 1,024 bytes)## M, MiB: mebibytes (2^20 - 1,048,576 bytes)## G, GiB: gibibytes (2^30 - 1,073,741,824 bytes)## kB: kilobytes (10^3 - 1,000 bytes)## MB: megabytes (10^6 - 1,000,000 bytes)## GB: gigabytes (10^9 - 1,000,000,000 bytes)## Fraction of the high watermark limit at which queues start to## page message out to disc in order to free up memory.## For example, when vm_memory_high_watermark is set to 0.4 and this value is set to 0.5,## paging can begin as early as when 20% of total available RAM is used by the node.#### Values greater than 1.0 can be dangerous and should be used carefully.#### One alternative to this is to use durable queues and publish messages## as persistent (delivery mode = 2). With this combination queues will## move messages to disk much more rapidly.#### Another alternative is to configure queues to page all messages (both## persistent and transient) to disk as quickly## as possible, see https://rabbitmq.com/lazy-queues.html.### vm_memory_high_watermark_paging_ratio = 0.5## Selects Erlang VM memory consumption calculation strategy. Can be `allocated`, `rss` or `legacy` (aliased as `erlang`),## Introduced in 3.6.11. `rss` is the default as of 3.6.12.## See https://github.com/rabbitmq/rabbitmq-server/issues/1223 and rabbitmq/rabbitmq-common#224 for background.# vm_memory_calculation_strategy = rss## Interval (in milliseconds) at which we perform the check of the memory## levels against the watermarks.### memory_monitor_interval = 2500## The total memory available can be calculated from the OS resources## - default option - or provided as a configuration parameter.# total_memory_available_override_value = 2GB## Set disk free limit (in bytes). Once free disk space reaches this## lower bound, a disk alarm will be set - see the documentation## listed above for more details.#### Absolute watermark will be ignored if relative is defined!# disk_free_limit.absolute = 50000## Or you can set it using memory units (same as in vm_memory_high_watermark)## with RabbitMQ 3.6.0+.# disk_free_limit.absolute = 500KB# disk_free_limit.absolute = 50mb# disk_free_limit.absolute = 5GB## Alternatively, we can set a limit relative to total available RAM.#### Values lower than 1.0 can be dangerous and should be used carefully.# disk_free_limit.relative = 2.0#### Clustering## =====================### cluster_partition_handling = ignore## Pauses all nodes on the minority side of a partition. The cluster## MUST have an odd number of nodes (3, 5, etc)# cluster_partition_handling = pause_minority## pause_if_all_down strategy require additional configuration# cluster_partition_handling = pause_if_all_down## Recover strategy. Can be either 'autoheal' or 'ignore'# cluster_partition_handling.pause_if_all_down.recover = ignore## Node names to check# cluster_partition_handling.pause_if_all_down.nodes.1 = rabbit@localhost# cluster_partition_handling.pause_if_all_down.nodes.2 = hare@localhost## Mirror sync batch size, in messages. Increasing this will speed## up syncing but total batch size in bytes must not exceed 2 GiB.## Available in RabbitMQ 3.6.0 or later.### mirroring_sync_batch_size = 4096## Make clustering happen *automatically* at startup. Only applied## to nodes that have just been reset or started for the first time.#### Relevant doc guide: https://rabbitmq.com//cluster-formation.html### cluster_formation.peer_discovery_backend = rabbit_peer_discovery_classic_config## cluster_formation.classic_config.nodes.1 = rabbit1@hostname# cluster_formation.classic_config.nodes.2 = rabbit2@hostname# cluster_formation.classic_config.nodes.3 = rabbit3@hostname# cluster_formation.classic_config.nodes.4 = rabbit4@hostname## DNS-based peer discovery. This backend will list A records## of the configured hostname and perform reverse lookups for## the addresses returned.# cluster_formation.peer_discovery_backend = rabbit_peer_discovery_dns# cluster_formation.dns.hostname = discovery.eng.example.local## This node's type can be configured. If you are not sure## what node type to use, always use 'disc'.# cluster_formation.node_type = disc## Interval (in milliseconds) at which we send keepalive messages## to other cluster members. Note that this is not the same thing## as net_ticktime; missed keepalive messages will not cause nodes## to be considered down.### cluster_keepalive_interval = 10000#### Statistics Collection## =====================#### Statistics collection interval (in milliseconds). Increasing## this will reduce the load on management database.### collect_statistics_interval = 5000## Fine vs. coarse statistics## This value is no longer meant to be configured directly.## See https://www.rabbitmq.com/management.html#fine-stats.#### Ra Settings## =====================### raft.segment_max_entries = 65536# raft.wal_max_size_bytes = 1048576# raft.wal_max_batch_size = 4096# raft.snapshot_chunk_size = 1000000#### Misc/Advanced Options## =====================#### NB: Change these only if you understand what you are doing!#### Timeout used when waiting for Mnesia tables in a cluster to## become available.### mnesia_table_loading_retry_timeout = 30000## Retries when waiting for Mnesia tables in the cluster startup. Note that## this setting is not applied to Mnesia upgrades or node deletions.### mnesia_table_loading_retry_limit = 10## Size in bytes below which to embed messages in the queue index.## Related doc guide: https://rabbitmq.com/persistence-conf.html### queue_index_embed_msgs_below = 4096## You can also set this size in memory units### queue_index_embed_msgs_below = 4kb## Whether or not to enable background periodic forced GC runs for all## Erlang processes on the node in &quot;waiting&quot; state.#### Disabling background GC may reduce latency for client operations,## keeping it enabled may reduce median RAM usage by the binary heap## (see https://www.erlang-solutions.com/blog/erlang-garbage-collector.html).#### Before trying this option, please take a look at the memory## breakdown (https://www.rabbitmq.com/memory-use.html).### background_gc_enabled = false## Target (desired) interval (in milliseconds) at which we run background GC.## The actual interval will vary depending on how long it takes to execute## the operation (can be higher than this interval). Values less than## 30000 milliseconds are not recommended.### background_gc_target_interval = 60000## Whether or not to enable proxy protocol support.## Once enabled, clients cannot directly connect to the broker## anymore. They must connect through a load balancer that sends the## proxy protocol header to the broker at connection time.## This setting applies only to AMQP clients, other protocols## like MQTT or STOMP have their own setting to enable proxy protocol.## See the plugins documentation for more information.### proxy_protocol = false## Overriden product name and version.## They are set to &quot;RabbitMQ&quot; and the release version by default.# product.name = RabbitMQ# product.version = 1.2.3## &quot;Message of the day&quot; file.## Its content is used to expand the logged and printed banners.## Default to /etc/rabbitmq/motd on Unix, %APPDATA%\\RabbitMQ\\motd.txt## on Windows.# motd_file = /etc/rabbitmq/motd## Consumer timeout## If a message delivered to a consumer has not been acknowledge before this timer## triggers the channel will be force closed by the broker. This ensure that## faultly consumers that never ack will not hold on to messages indefinitely.### consumer_timeout = 900000## ----------------------------------------------------------------------------## Advanced Erlang Networking/Clustering Options.#### Related doc guide: https://rabbitmq.com/clustering.html## ----------------------------------------------------------------------------# ======================================# Kernel section# ======================================## Timeout used to detect peer unavailability, including CLI tools.## Related doc guide: https://www.rabbitmq.com/nettick.html.### net_ticktime = 60## Inter-node communication port range.## The parameters inet_dist_listen_min and inet_dist_listen_max## can be configured in the classic config format only.## Related doc guide: https://www.rabbitmq.com/networking.html#epmd-inet-dist-port-range.## ----------------------------------------------------------------------------## RabbitMQ Management Plugin#### Related doc guide: https://rabbitmq.com/management.html.## ----------------------------------------------------------------------------# =======================================# Management section# =======================================## Preload schema definitions from the following JSON file.## Related doc guide: https://rabbitmq.com/management.html#load-definitions.### management.load_definitions = /path/to/exported/definitions.json## Log all requests to the management HTTP API to a file.### management.http_log_dir = /path/to/access.log## HTTP listener and embedded Web server settings.# ## See https://rabbitmq.com/management.html for details.## management.tcp.port = 15672# management.tcp.ip = 0.0.0.0## management.tcp.shutdown_timeout = 7000# management.tcp.max_keepalive = 120# management.tcp.idle_timeout = 120# management.tcp.inactivity_timeout = 120# management.tcp.request_timeout = 120# management.tcp.compress = true## HTTPS listener settings.## See https://rabbitmq.com/management.html and https://rabbitmq.com/ssl.html for details.### management.ssl.port = 15671# management.ssl.cacertfile = /path/to/ca_certificate.pem# management.ssl.certfile = /path/to/server_certificate.pem# management.ssl.keyfile = /path/to/server_key.pem## More TLS options# management.ssl.honor_cipher_order = true# management.ssl.honor_ecc_order = true## These are highly recommended for TLSv1.2 but cannot be used## with TLSv1.3. If TLSv1.3 is enabled, these lines MUST be removed.# management.ssl.client_renegotiation = false# management.ssl.secure_renegotiate = true## Supported TLS versions# management.ssl.versions.1 = tlsv1.2## Cipher suites the server is allowed to use# management.ssl.ciphers.1 = ECDHE-ECDSA-AES256-GCM-SHA384# management.ssl.ciphers.2 = ECDHE-RSA-AES256-GCM-SHA384# management.ssl.ciphers.3 = ECDHE-ECDSA-AES256-SHA384# management.ssl.ciphers.4 = ECDHE-RSA-AES256-SHA384# management.ssl.ciphers.5 = ECDH-ECDSA-AES256-GCM-SHA384# management.ssl.ciphers.6 = ECDH-RSA-AES256-GCM-SHA384# management.ssl.ciphers.7 = ECDH-ECDSA-AES256-SHA384# management.ssl.ciphers.8 = ECDH-RSA-AES256-SHA384# management.ssl.ciphers.9 = DHE-RSA-AES256-GCM-SHA384## URL path prefix for HTTP API and management UI# management.path_prefix = /a-prefix## One of 'basic', 'detailed' or 'none'. See## https://rabbitmq.com/management.html#fine-stats for more details.# management.rates_mode = basic## Configure how long aggregated data (such as message rates and queue## lengths) is retained. Please read the plugin's documentation in## https://rabbitmq.com/management.html#configuration for more## details.## Your can use 'minute', 'hour' and 'day' keys or integer key (in seconds)# management.sample_retention_policies.global.minute = 5# management.sample_retention_policies.global.hour = 60# management.sample_retention_policies.global.day = 1200# management.sample_retention_policies.basic.minute = 5# management.sample_retention_policies.basic.hour = 60# management.sample_retention_policies.detailed.10 = 5## ----------------------------------------------------------------------------## RabbitMQ Shovel Plugin#### Related doc guide: https://rabbitmq.com/shovel.html## ----------------------------------------------------------------------------## See advanced.config.example for a Shovel plugin example## ----------------------------------------------------------------------------## RabbitMQ STOMP Plugin#### Related doc guide: https://rabbitmq.com/stomp.html## ----------------------------------------------------------------------------# =======================================# STOMP section# =======================================## See https://rabbitmq.com/stomp.html for details.## TCP listeners.### stomp.listeners.tcp.1 = 127.0.0.1:61613# stomp.listeners.tcp.2 = ::1:61613## TCP listener settings### stomp.tcp_listen_options.backlog = 2048# stomp.tcp_listen_options.recbuf = 131072# stomp.tcp_listen_options.sndbuf = 131072## stomp.tcp_listen_options.keepalive = true# stomp.tcp_listen_options.nodelay = true## stomp.tcp_listen_options.exit_on_close = true# stomp.tcp_listen_options.send_timeout = 120## Proxy protocol support### stomp.proxy_protocol = false## TLS listeners## See https://rabbitmq.com/stomp.html and https://rabbitmq.com/ssl.html for details.# stomp.listeners.ssl.default = 61614## ssl_options.cacertfile = path/to/cacert.pem# ssl_options.certfile = path/to/cert.pem# ssl_options.keyfile = path/to/key.pem# ssl_options.verify = verify_peer# ssl_options.fail_if_no_peer_cert = true## Number of Erlang processes that will accept connections for the TCP## and TLS listeners.### stomp.num_acceptors.tcp = 10# stomp.num_acceptors.ssl = 1## Additional TLS options## Extract a name from the client's certificate when using TLS.### stomp.ssl_cert_login = true## Set a default user name and password. This is used as the default login## whenever a CONNECT frame omits the login and passcode headers.#### Please note that setting this will allow clients to connect without## authenticating!### stomp.default_user = guest# stomp.default_pass = guest## If a default user is configured, or you have configured use TLS client## certificate based authentication, you can choose to allow clients to## omit the CONNECT frame entirely. If set to true, the client is## automatically connected as the default user or user supplied in the## TLS certificate whenever the first frame sent on a session is not a## CONNECT frame.### stomp.implicit_connect = true## Whether or not to enable proxy protocol support.## Once enabled, clients cannot directly connect to the broker## anymore. They must connect through a load balancer that sends the## proxy protocol header to the broker at connection time.## This setting applies only to STOMP clients, other protocols## like MQTT or AMQP have their own setting to enable proxy protocol.## See the plugins or broker documentation for more information.### stomp.proxy_protocol = false## ----------------------------------------------------------------------------## RabbitMQ MQTT Adapter#### See https://github.com/rabbitmq/rabbitmq-mqtt/blob/stable/README.md## for details## ----------------------------------------------------------------------------# =======================================# MQTT section# =======================================## TCP listener settings.### mqtt.listeners.tcp.1 = 127.0.0.1:61613# mqtt.listeners.tcp.2 = ::1:61613## TCP listener options (as per the broker configuration).### mqtt.tcp_listen_options.backlog = 4096# mqtt.tcp_listen_options.recbuf = 131072# mqtt.tcp_listen_options.sndbuf = 131072## mqtt.tcp_listen_options.keepalive = true# mqtt.tcp_listen_options.nodelay = true## mqtt.tcp_listen_options.exit_on_close = true# mqtt.tcp_listen_options.send_timeout = 120## TLS listener settings## ## See https://rabbitmq.com/mqtt.html and https://rabbitmq.com/ssl.html for details.## mqtt.listeners.ssl.default = 8883## ssl_options.cacertfile = /path/to/tls/ca_certificate_bundle.pem# ssl_options.certfile = /path/to/tls/server_certificate.pem# ssl_options.keyfile = /path/to/tls/server_key.pem# ssl_options.verify = verify_peer# ssl_options.fail_if_no_peer_cert = true### Number of Erlang processes that will accept connections for the TCP## and TLS listeners.### mqtt.num_acceptors.tcp = 10# mqtt.num_acceptors.ssl = 10## Whether or not to enable proxy protocol support.## Once enabled, clients cannot directly connect to the broker## anymore. They must connect through a load balancer that sends the## proxy protocol header to the broker at connection time.## This setting applies only to STOMP clients, other protocols## like STOMP or AMQP have their own setting to enable proxy protocol.## See the plugins or broker documentation for more information.### mqtt.proxy_protocol = false## Set the default user name and password used for anonymous connections (when client## provides no credentials). Anonymous connections are highly discouraged!### mqtt.default_user = guest# mqtt.default_pass = guest## Enable anonymous connections. If this is set to false, clients MUST provide## credentials in order to connect. See also the mqtt.default_user/mqtt.default_pass## keys. Anonymous connections are highly discouraged!### mqtt.allow_anonymous = true## If you have multiple vhosts, specify the one to which the## adapter connects.### mqtt.vhost = /## Specify the exchange to which messages from MQTT clients are published.### mqtt.exchange = amq.topic## Specify TTL (time to live) to control the lifetime of non-clean sessions.### mqtt.subscription_ttl = 1800000## Set the prefetch count (governing the maximum number of unacknowledged## messages that will be delivered).### mqtt.prefetch = 10## ----------------------------------------------------------------------------## RabbitMQ AMQP 1.0 Support#### See https://github.com/rabbitmq/rabbitmq-amqp1.0/blob/stable/README.md.## ----------------------------------------------------------------------------# =======================================# AMQP 1.0 section# =======================================## Connections that are not authenticated with SASL will connect as this## account. See the README for more information.#### Please note that setting this will allow clients to connect without## authenticating!### amqp1_0.default_user = guest## Enable protocol strict mode. See the README for more information.### amqp1_0.protocol_strict_mode = false## Logging settings.#### See https://rabbitmq.com/logging.html for details.#### Log directory, taken from the RABBITMQ_LOG_BASE env variable by default.### log.dir = /var/log/rabbitmq## Logging to file. Can be false or a filename.## Default:# log.file = rabbit.log## To disable logging to a file# log.file = false## Log level for file logging### log.file.level = info## File rotation config. No rotation by default.## DO NOT SET rotation date to ''. Leave the value unset if &quot;&quot; is the desired value# log.file.rotation.date = $D0# log.file.rotation.size = 0## Logging to console (can be true or false)### log.console = false## Log level for console logging### log.console.level = info## Logging to the amq.rabbitmq.log exchange (can be true or false)### log.exchange = false## Log level to use when logging to the amq.rabbitmq.log exchange### log.exchange.level = info## ----------------------------------------------------------------------------## RabbitMQ LDAP Plugin#### Related doc guide: https://rabbitmq.com/ldap.html.#### ----------------------------------------------------------------------------# =======================================# LDAP section# =======================================#### Connecting to the LDAP server(s)## ================================#### Specify servers to bind to. You *must* set this in order for the plugin## to work properly.### auth_ldap.servers.1 = your-server-name-goes-here## You can define multiple servers# auth_ldap.servers.2 = your-other-server## Connect to the LDAP server using TLS### auth_ldap.use_ssl = false## Specify the LDAP port to connect to### auth_ldap.port = 389## LDAP connection timeout, in milliseconds or 'infinity'### auth_ldap.timeout = infinity## Or number# auth_ldap.timeout = 500## Enable logging of LDAP queries.## One of## - false (no logging is performed)## - true (verbose logging of the logic used by the plugin)## - network (as true, but additionally logs LDAP network traffic)#### Defaults to false.### auth_ldap.log = false## Also can be true or network# auth_ldap.log = true# auth_ldap.log = network#### Authentication## ==============#### Pattern to convert the username given through AMQP to a DN before## binding### auth_ldap.user_dn_pattern = cn=${username},ou=People,dc=example,dc=com## Alternatively, you can convert a username to a Distinguished## Name via an LDAP lookup after binding. See the documentation for## full details.## When converting a username to a dn via a lookup, set these to## the name of the attribute that represents the user name, and the## base DN for the lookup query.### auth_ldap.dn_lookup_attribute = userPrincipalName# auth_ldap.dn_lookup_base = DC=gopivotal,DC=com## Controls how to bind for authorisation queries and also to## retrieve the details of users logging in without presenting a## password (e.g., SASL EXTERNAL).## One of## - as_user (to bind as the authenticated user - requires a password)## - anon (to bind anonymously)## - {UserDN, Password} (to bind with a specified user name and password)#### Defaults to 'as_user'.### auth_ldap.other_bind = as_user## Or can be more complex:# auth_ldap.other_bind.user_dn = User# auth_ldap.other_bind.password = Password## If user_dn and password defined - other options is ignored.# -----------------------------# Too complex section of LDAP# -----------------------------#### Authorisation## =============#### The LDAP plugin can perform a variety of queries against your## LDAP server to determine questions of authorisation.#### Related doc guide: https://rabbitmq.com/ldap.html#authorisation.## Following configuration should be defined in advanced.config file## DO NOT UNCOMMENT THESE LINES!## Set the query to use when determining vhost access#### {vhost_access_query, {in_group,## &quot;ou=${vhost}-users,ou=vhosts,dc=example,dc=com&quot;}},## Set the query to use when determining resource (e.g., queue) access#### {resource_access_query, {constant, true}},## Set queries to determine which tags a user has#### {tag_queries, []}# ]},# ----------------------------- 开启 management 插件1{rabbitmq_home}/sbin/rabbitmq-plug enable rabbitmq_management 创建管理员用户1{rabbitmq_home}/sbin/rabbitmqctl add_user admin 123456 设置用户角色1{rabbitmq_home}/sbin/rabbitmqctl set_user_tags admin administrator 设置用户权限1{rabbitmq_home}/sbin/rabbitmqctl set_permissions -p &quot;/&quot; admin &quot;.*&quot; &quot;.*&quot; &quot;.*&quot; 启动123RABBITMQ_NODENAME=rabbit1 RABBITMQ_NODE_PORT=5671 RABBITMQ_CONFIG_FILE={rabbitmq_home}/etc/rabbitmq/rabbitmq-1.conf {rabbitmq_home}/sbin/./rabbitmq-server -detachedRABBITMQ_NODENAME=rabbit2 RABBITMQ_NODE_PORT=5672 RABBITMQ_CONFIG_FILE={rabbitmq_home}/etc/rabbitmq/rabbitmq-1.conf {rabbitmq_home}/sbin/./rabbitmq-server -detachedRABBITMQ_NODENAME=rabbit3 RABBITMQ_NODE_PORT=5673 RABBITMQ_CONFIG_FILE={rabbitmq_home}/etc/rabbitmq/rabbitmq-1.conf {rabbitmq_home}/sbin/./rabbitmq-server -detached 检查集群状态1{rabbitmq_home}/sbin/rabbitmqctl cluster_status 打开 http://localhost:5671 登录 出现 RabbitMQ 管理页面表示启动成功 多机器集群（3 节点）分别在各个服务器上启动 RabbitMQ 单节点1{rabbitmq_home}/sbin/rabbitmq-server -detached 组建集群查看各个节点的 node name123rabbitmqctl statusStatus of node {node name} ... 将第 2、3 单节点加入 1 节点中，组成集群123rabbitmqctl stop_apprabbitmqctl join_cluster {1 节点 node name}rabbitmqctl start_app 检查集群状态1{rabbitmq_home}/sbin/rabbitmqctl cluster_status","link":"/2023/05/29/rabbitmq/2-tar-install/"},{"title":"RabbitMQ 队列","text":"队列属性 Virtual host: Name: Durability: Node: Auto delete: Internal: Arguments: 队列参数队列长度 x-max-length 队列大小 x-max-length-bytes 队列溢出动作 x-overflow drop-head reject-publish reject-publish-dlx 超时时间 x-message-ttl 队列模式 x-queue-mode lazy 死信交换机 x-dead-letter-exchange 死信 Routing Key x-dead-letter-routing-key 自动删除前的空闲时间 x-expires","link":"/2023/05/29/rabbitmq/6-queue/"},{"title":"RabbitMQ Management Api 接口","text":"在线位置 http://localhost:15672/api/index.html","link":"/2023/05/29/rabbitmq/7-management-api/"},{"title":"Golang 镜像","text":"启用 Go Modules 功能 Go 版本是 1.13 - 1.15 需要手动设置GO111MODULE=on 1.15 以上版本默认开启GO111MODULE=on 国内代理export GOPROXY=https://goproxy.cn,https://goproxy.io,direct","link":"/2023/05/29/notes/go-mirrors/"},{"title":"Linux 远程执行命令","text":"直接发送命令 多条使用分号分隔1ssh {username}@{remote_node} &quot;cd /home ; ls&quot; 脚本发送命令123456789vi remote_shell.sh#!/bin/bashssh {username}@{remote_node} &gt; /dev/null 2&gt;&amp;1 &lt;&lt; eeooffcd /hometouch abcdefg.txtexiteeooffecho done!","link":"/2023/05/29/notes/linux-remote-shell/"},{"title":"Linux 免密设置","text":"12345678910设置免密访问. 不设置密码 直接回车ssh-keygen -t rsa将公钥复制道远程服务器scp -r ~/.ssh/id_rsa.pub root@39.100.130.232:~/.ssh/#将公钥追加入授权文件【authorized_keys】cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys#.ssh目录权限设置为700chmod 700 ~/.ssh# 授权文件权限设置为600chmod 600 ~/.ssh/authorized_keys","link":"/2023/05/29/notes/linux-ssh/"},{"title":"Maven 镜像配置","text":"在 ${maven_home}/conf/settting.xml 文件中配置123456&lt;mirror&gt; &lt;id&gt;aliyunmaven&lt;/id&gt; &lt;mirrorOf&gt;*&lt;/mirrorOf&gt; &lt;name&gt;阿里云公共仓库&lt;/name&gt; &lt;url&gt;https://maven.aliyun.com/repository/public&lt;/url&gt;&lt;/mirror&gt; 在 pom.xml 文件中配置123456789101112131415&lt;repositories&gt; &lt;repository&gt; &lt;id&gt;aliyun&lt;/id&gt; &lt;name&gt;aliyun&lt;/name&gt; &lt;url&gt;https://maven.aliyun.com/repository/public&lt;/url&gt; &lt;/repository&gt;&lt;/repositories&gt;&lt;pluginRepositories&gt; &lt;pluginRepository&gt; &lt;id&gt;aliyun&lt;/id&gt; &lt;name&gt;aliyun&lt;/name&gt; &lt;url&gt;https://maven.aliyun.com/repository/public&lt;/url&gt; &lt;/pluginRepository&gt;&lt;/pluginRepositories&gt;","link":"/2023/05/29/notes/maven-mirrors/"},{"title":"Node 镜像","text":"直接使用npm install –registry=https://registry.npmmirror.com 全局配置npm config set registry=https://registry.npmmirror.com electron 镜像export ELECTRON_MIRROR=http://npm.taobao.org/mirrors/electron/","link":"/2023/05/29/notes/node-mirrors/"}],"tags":[{"name":"ansible","slug":"ansible","link":"/tags/ansible/"},{"name":"linux","slug":"linux","link":"/tags/linux/"},{"name":"elasticsearch","slug":"elasticsearch","link":"/tags/elasticsearch/"},{"name":"kibana","slug":"kibana","link":"/tags/kibana/"},{"name":"docker","slug":"docker","link":"/tags/docker/"},{"name":"rabbitmq","slug":"rabbitmq","link":"/tags/rabbitmq/"},{"name":"golang","slug":"golang","link":"/tags/golang/"},{"name":"maven","slug":"maven","link":"/tags/maven/"},{"name":"node","slug":"node","link":"/tags/node/"}],"categories":[{"name":"ansible","slug":"ansible","link":"/categories/ansible/"},{"name":"docker","slug":"docker","link":"/categories/docker/"},{"name":"linux","slug":"linux","link":"/categories/linux/"},{"name":"elasticsearch","slug":"elasticsearch","link":"/categories/elasticsearch/"},{"name":"rabbitmq","slug":"rabbitmq","link":"/categories/rabbitmq/"},{"name":"node","slug":"node","link":"/categories/node/"},{"name":"maven","slug":"maven","link":"/categories/maven/"}],"pages":[]}